// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BetCreated extends ethereum.Event {
  get params(): BetCreated__Params {
    return new BetCreated__Params(this);
  }
}

export class BetCreated__Params {
  _event: BetCreated;

  constructor(event: BetCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get strike(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get greaterBet(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get itemId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class BetExerciseConfirmed extends ethereum.Event {
  get params(): BetExerciseConfirmed__Params {
    return new BetExerciseConfirmed__Params(this);
  }
}

export class BetExerciseConfirmed__Params {
  _event: BetExerciseConfirmed;

  constructor(event: BetExerciseConfirmed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get strike(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get winner(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get payout(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class BetExerciseRequested extends ethereum.Event {
  get params(): BetExerciseRequested__Params {
    return new BetExerciseRequested__Params(this);
  }
}

export class BetExerciseRequested__Params {
  _event: BetExerciseRequested;

  constructor(event: BetExerciseRequested) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get strike(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BetJoined extends ethereum.Event {
  get params(): BetJoined__Params {
    return new BetJoined__Params(this);
  }
}

export class BetJoined__Params {
  _event: BetJoined;

  constructor(event: BetJoined) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get strike(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class BetLeft extends ethereum.Event {
  get params(): BetLeft__Params {
    return new BetLeft__Params(this);
  }
}

export class BetLeft__Params {
  _event: BetLeft;

  constructor(event: BetLeft) {
    this._event = event;
  }

  get leaver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CSGoBets__betsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: boolean;
  value4: BigInt;
  value5: boolean;
  value6: BigInt;
  value7: Address;
  value8: Address;
  value9: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: boolean,
    value4: BigInt,
    value5: boolean,
    value6: BigInt,
    value7: Address,
    value8: Address,
    value9: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    map.set("value8", ethereum.Value.fromAddress(this.value8));
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    return map;
  }

  getStrike(): BigInt {
    return this.value0;
  }

  getExpiry(): BigInt {
    return this.value1;
  }

  getAmount(): BigInt {
    return this.value2;
  }

  getExercised(): boolean {
    return this.value3;
  }

  getId(): BigInt {
    return this.value4;
  }

  getGreaterBet(): boolean {
    return this.value5;
  }

  getItemId(): BigInt {
    return this.value6;
  }

  getCreator(): Address {
    return this.value7;
  }

  getBuyer(): Address {
    return this.value8;
  }

  getRequestExercise(): boolean {
    return this.value9;
  }
}

export class CSGoBets extends ethereum.SmartContract {
  static bind(address: Address): CSGoBets {
    return new CSGoBets("CSGoBets", address);
  }

  USDC(): Address {
    let result = super.call("USDC", "USDC():(address)", []);

    return result[0].toAddress();
  }

  try_USDC(): ethereum.CallResult<Address> {
    let result = super.tryCall("USDC", "USDC():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bets(param0: BigInt): CSGoBets__betsResult {
    let result = super.call(
      "bets",
      "bets(uint256):(uint256,uint256,uint256,bool,uint256,bool,uint256,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new CSGoBets__betsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBoolean(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toBigInt(),
      result[7].toAddress(),
      result[8].toAddress(),
      result[9].toBoolean()
    );
  }

  try_bets(param0: BigInt): ethereum.CallResult<CSGoBets__betsResult> {
    let result = super.tryCall(
      "bets",
      "bets(uint256):(uint256,uint256,uint256,bool,uint256,bool,uint256,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CSGoBets__betsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBoolean(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toBigInt(),
        value[7].toAddress(),
        value[8].toAddress(),
        value[9].toBoolean()
      )
    );
  }

  feeReciever(): Address {
    let result = super.call("feeReciever", "feeReciever():(address)", []);

    return result[0].toAddress();
  }

  try_feeReciever(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeReciever", "feeReciever():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _usdc(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _oracle(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeReciever(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChangeFeeRecieverCall extends ethereum.Call {
  get inputs(): ChangeFeeRecieverCall__Inputs {
    return new ChangeFeeRecieverCall__Inputs(this);
  }

  get outputs(): ChangeFeeRecieverCall__Outputs {
    return new ChangeFeeRecieverCall__Outputs(this);
  }
}

export class ChangeFeeRecieverCall__Inputs {
  _call: ChangeFeeRecieverCall;

  constructor(call: ChangeFeeRecieverCall) {
    this._call = call;
  }

  get _feeReciever(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeFeeRecieverCall__Outputs {
  _call: ChangeFeeRecieverCall;

  constructor(call: ChangeFeeRecieverCall) {
    this._call = call;
  }
}

export class ChangeOracleCall extends ethereum.Call {
  get inputs(): ChangeOracleCall__Inputs {
    return new ChangeOracleCall__Inputs(this);
  }

  get outputs(): ChangeOracleCall__Outputs {
    return new ChangeOracleCall__Outputs(this);
  }
}

export class ChangeOracleCall__Inputs {
  _call: ChangeOracleCall;

  constructor(call: ChangeOracleCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeOracleCall__Outputs {
  _call: ChangeOracleCall;

  constructor(call: ChangeOracleCall) {
    this._call = call;
  }
}

export class ConfirmExerciseBetCall extends ethereum.Call {
  get inputs(): ConfirmExerciseBetCall__Inputs {
    return new ConfirmExerciseBetCall__Inputs(this);
  }

  get outputs(): ConfirmExerciseBetCall__Outputs {
    return new ConfirmExerciseBetCall__Outputs(this);
  }
}

export class ConfirmExerciseBetCall__Inputs {
  _call: ConfirmExerciseBetCall;

  constructor(call: ConfirmExerciseBetCall) {
    this._call = call;
  }

  get ID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConfirmExerciseBetCall__Outputs {
  _call: ConfirmExerciseBetCall;

  constructor(call: ConfirmExerciseBetCall) {
    this._call = call;
  }
}

export class CreateBetCall extends ethereum.Call {
  get inputs(): CreateBetCall__Inputs {
    return new CreateBetCall__Inputs(this);
  }

  get outputs(): CreateBetCall__Outputs {
    return new CreateBetCall__Outputs(this);
  }
}

export class CreateBetCall__Inputs {
  _call: CreateBetCall;

  constructor(call: CreateBetCall) {
    this._call = call;
  }

  get strike(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get tknAmt(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get itemId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get greaterBet(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class CreateBetCall__Outputs {
  _call: CreateBetCall;

  constructor(call: CreateBetCall) {
    this._call = call;
  }
}

export class JoinBetCall extends ethereum.Call {
  get inputs(): JoinBetCall__Inputs {
    return new JoinBetCall__Inputs(this);
  }

  get outputs(): JoinBetCall__Outputs {
    return new JoinBetCall__Outputs(this);
  }
}

export class JoinBetCall__Inputs {
  _call: JoinBetCall;

  constructor(call: JoinBetCall) {
    this._call = call;
  }

  get ID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class JoinBetCall__Outputs {
  _call: JoinBetCall;

  constructor(call: JoinBetCall) {
    this._call = call;
  }
}

export class LeaveBetCall extends ethereum.Call {
  get inputs(): LeaveBetCall__Inputs {
    return new LeaveBetCall__Inputs(this);
  }

  get outputs(): LeaveBetCall__Outputs {
    return new LeaveBetCall__Outputs(this);
  }
}

export class LeaveBetCall__Inputs {
  _call: LeaveBetCall;

  constructor(call: LeaveBetCall) {
    this._call = call;
  }

  get ID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LeaveBetCall__Outputs {
  _call: LeaveBetCall;

  constructor(call: LeaveBetCall) {
    this._call = call;
  }
}

export class RequestExerciseBetCall extends ethereum.Call {
  get inputs(): RequestExerciseBetCall__Inputs {
    return new RequestExerciseBetCall__Inputs(this);
  }

  get outputs(): RequestExerciseBetCall__Outputs {
    return new RequestExerciseBetCall__Outputs(this);
  }
}

export class RequestExerciseBetCall__Inputs {
  _call: RequestExerciseBetCall;

  constructor(call: RequestExerciseBetCall) {
    this._call = call;
  }

  get ID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestExerciseBetCall__Outputs {
  _call: RequestExerciseBetCall;

  constructor(call: RequestExerciseBetCall) {
    this._call = call;
  }
}
